using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Draw_Shapes
{
    /// <summary>
    /// This is the concrete class which implements all the methods of Container interface.
    /// This class also contains a inner class called ErrorIterator which implements the Iterator interface.
    /// </summary>
    public class ErrorRepository : Container
    {
        /// <summary>
        /// Arraylist which stores the possible errors generated by the program.
        /// </summary>
        public static List<String> errorsList = new List<String>();
        /// <summary>
        /// This method returns the object of inner class ErrorIterator.
        /// This method also calls the constructor of ErorIterator class.
        /// </summary>
        /// <returns>object of ErrorIterator class</returns>
        public Iterator getIterator()
        {
            //returning object of ErrorIterator class
            return new ErrorIterator();
        }
        /// <summary>
        /// This is the inner class which implements the methods of Iterator interface.
        /// </summary>
        private class ErrorIterator : Iterator
        {
           //It is a positionnumber of errorslist arraylist
            int index;
            /// <summary>
            /// This method checks if element has got items in the collection based on an incrementing position number.
            /// This method is overrided from the Iterator interface.
            /// </summary>
            /// <returns></returns>
            public bool hasNext()
            {
                //returns true if length of arraylist is less than index
                if (index < errorsList.Count)
                {
                    return true;
                }
                return false;
            }

            /// <summary>
            /// This method is overrided from the Iterator interface.
            /// This method returns an object from collection  which can be later casted to an expected type.
            /// </summary>
            /// <returns></returns>
            public object Next()
            {
                //checks if there is any items in collection arraylist
                if (this.hasNext())
                {
                    //returns the collection position by incrementing
                    return errorsList[index++];
                }
                return null;
            }
        }
    }
}
